// Start of user code Copyright
/*
 * Copyright (c) 2020 Contributors to the Eclipse Foundation
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Distribution License 1.0 which is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * SPDX-License-Identifier: BSD-3-Simple
 *
 * This file is generated by Lyo Designer (https://www.eclipse.org/lyo/)
 */
// End of user code

package org.oasis.oslcop.sysml;

import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.text.SimpleDateFormat;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;
import java.util.Iterator;

import org.eclipse.lyo.oslc4j.core.OSLC4JUtils;
import org.eclipse.lyo.oslc4j.core.exception.OslcCoreApplicationException;
import org.eclipse.lyo.oslc4j.core.annotation.OslcAllowedValue;
import org.eclipse.lyo.oslc4j.core.annotation.OslcDescription;
import org.eclipse.lyo.oslc4j.core.annotation.OslcMemberProperty;
import org.eclipse.lyo.oslc4j.core.annotation.OslcName;
import org.eclipse.lyo.oslc4j.core.annotation.OslcNamespace;
import org.eclipse.lyo.oslc4j.core.annotation.OslcOccurs;
import org.eclipse.lyo.oslc4j.core.annotation.OslcPropertyDefinition;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRdfCollectionType;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRange;
import org.eclipse.lyo.oslc4j.core.annotation.OslcReadOnly;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRepresentation;
import org.eclipse.lyo.oslc4j.core.annotation.OslcResourceShape;
import org.eclipse.lyo.oslc4j.core.annotation.OslcTitle;
import org.eclipse.lyo.oslc4j.core.annotation.OslcValueType;
import org.eclipse.lyo.oslc4j.core.model.AbstractResource;
import org.eclipse.lyo.oslc4j.core.model.Link;
import org.eclipse.lyo.oslc4j.core.model.Occurs;
import org.eclipse.lyo.oslc4j.core.model.OslcConstants;
import org.eclipse.lyo.oslc4j.core.model.Representation;
import org.eclipse.lyo.oslc4j.core.model.ValueType;
import org.eclipse.lyo.oslc4j.core.model.ResourceShape;
import org.eclipse.lyo.oslc4j.core.model.ResourceShapeFactory;

import org.oasis.oslcop.sysml.SysmlDomainConstants;
import org.oasis.oslcop.sysml.Membership;

import org.oasis.oslcop.sysml.SysmlDomainConstants;

import org.oasis.oslcop.sysml.Annotation;
import org.oasis.oslcop.sysml.Comment;
import org.oasis.oslcop.sysml.Documentation;
import org.oasis.oslcop.sysml.Element;
import org.oasis.oslcop.sysml.Expression;
import org.oasis.oslcop.sysml.Feature;
import org.oasis.oslcop.sysml.Membership;
import org.oasis.oslcop.sysml.Namespace;
import org.eclipse.lyo.oslc.domains.Person;
import org.oasis.oslcop.sysml.Relationship;
import org.oasis.oslcop.sysml.TextualRepresentation;
// Start of user code imports
// End of user code

// Start of user code preClassCode
// End of user code

// Start of user code classAnnotations
// End of user code
@OslcNamespace(SysmlDomainConstants.FEATUREVALUE_NAMESPACE)
@OslcName(SysmlDomainConstants.FEATUREVALUE_LOCALNAME)
@OslcResourceShape(title = "FeatureValue Shape", describes = SysmlDomainConstants.FEATUREVALUE_TYPE)
public class FeatureValue
    extends Membership
    implements IFeatureValue
{
    // Start of user code attributeAnnotation:isInitial
    // End of user code
    private Boolean isInitial;
    // Start of user code attributeAnnotation:isDefault
    // End of user code
    private Boolean isDefault;
    // Start of user code attributeAnnotation:featureWithValue
    // End of user code
    private Link featureWithValue;
    // Start of user code attributeAnnotation:value
    // End of user code
    private Link value;
    
    // Start of user code classAttributes
    // End of user code
    // Start of user code classMethods
    // End of user code
    public FeatureValue()
    {
        super();
    
        // Start of user code constructor1
        // End of user code
    }
    
    public FeatureValue(final URI about)
    {
        super(about);
    
        // Start of user code constructor2
        // End of user code
    }
    
    public static ResourceShape createResourceShape() throws OslcCoreApplicationException, URISyntaxException {
        return ResourceShapeFactory.createResourceShape(OSLC4JUtils.getServletURI(),
        OslcConstants.PATH_RESOURCE_SHAPES,
        SysmlDomainConstants.FEATUREVALUE_PATH,
        FeatureValue.class);
    }
    
    
    public String toString()
    {
        return toString(false);
    }
    
    public String toString(boolean asLocalResource)
    {
        String result = "";
        // Start of user code toString_init
        // End of user code
    
        if (asLocalResource) {
            result = result + "{a Local FeatureValue Resource} - update FeatureValue.toString() to present resource as desired.";
            // Start of user code toString_bodyForLocalResource
            // End of user code
        }
        else {
            result = String.valueOf(getAbout());
        }
    
        // Start of user code toString_finalize
 result = getShortTitle();
        // End of user code
    
        return result;
    }
    
    
    // Start of user code getterAnnotation:isInitial
    // End of user code
    @OslcName("isInitial")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "isInitial")
    @OslcOccurs(Occurs.ExactlyOne)
    @OslcValueType(ValueType.Boolean)
    @OslcReadOnly(false)
    public Boolean isIsInitial()
    {
        // Start of user code getterInit:isInitial
        // End of user code
        return isInitial;
    }
    
    // Start of user code getterAnnotation:isDefault
    // End of user code
    @OslcName("isDefault")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "isDefault")
    @OslcOccurs(Occurs.ExactlyOne)
    @OslcValueType(ValueType.Boolean)
    @OslcReadOnly(false)
    public Boolean isIsDefault()
    {
        // Start of user code getterInit:isDefault
        // End of user code
        return isDefault;
    }
    
    // Start of user code getterAnnotation:featureWithValue
    // End of user code
    @OslcName("featureWithValue")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "featureWithValue")
    @OslcOccurs(Occurs.ExactlyOne)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.FEATURE_TYPE})
    @OslcReadOnly(false)
    public Link getFeatureWithValue()
    {
        // Start of user code getterInit:featureWithValue
        // End of user code
        return featureWithValue;
    }
    
    // Start of user code getterAnnotation:value
    // End of user code
    @OslcName("value")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "value")
    @OslcOccurs(Occurs.ExactlyOne)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.EXPRESSION_TYPE})
    @OslcReadOnly(false)
    public Link getValue()
    {
        // Start of user code getterInit:value
        // End of user code
        return value;
    }
    
    
    // Start of user code setterAnnotation:isInitial
    // End of user code
    public void setIsInitial(final Boolean isInitial )
    {
        // Start of user code setterInit:isInitial
        // End of user code
        this.isInitial = isInitial;
    
        // Start of user code setterFinalize:isInitial
        // End of user code
    }
    
    // Start of user code setterAnnotation:isDefault
    // End of user code
    public void setIsDefault(final Boolean isDefault )
    {
        // Start of user code setterInit:isDefault
        // End of user code
        this.isDefault = isDefault;
    
        // Start of user code setterFinalize:isDefault
        // End of user code
    }
    
    // Start of user code setterAnnotation:featureWithValue
    // End of user code
    public void setFeatureWithValue(final Link featureWithValue )
    {
        // Start of user code setterInit:featureWithValue
        // End of user code
        this.featureWithValue = featureWithValue;
    
        // Start of user code setterFinalize:featureWithValue
        // End of user code
    }
    
    // Start of user code setterAnnotation:value
    // End of user code
    public void setValue(final Link value )
    {
        // Start of user code setterInit:value
        // End of user code
        this.value = value;
    
        // Start of user code setterFinalize:value
        // End of user code
    }
    
    
}
