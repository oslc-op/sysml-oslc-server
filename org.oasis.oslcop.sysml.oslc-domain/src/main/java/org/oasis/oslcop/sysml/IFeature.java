// Start of user code Copyright
/*
 * Copyright (c) 2020 Contributors to the Eclipse Foundation
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Distribution License 1.0 which is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * SPDX-License-Identifier: BSD-3-Simple
 *
 * This file is generated by Lyo Designer (https://www.eclipse.org/lyo/)
 */
// End of user code

package org.oasis.oslcop.sysml;

import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.text.SimpleDateFormat;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;
import java.util.Iterator;

import org.eclipse.lyo.oslc4j.core.annotation.OslcAllowedValue;
import org.eclipse.lyo.oslc4j.core.annotation.OslcDescription;
import org.eclipse.lyo.oslc4j.core.annotation.OslcMemberProperty;
import org.eclipse.lyo.oslc4j.core.annotation.OslcName;
import org.eclipse.lyo.oslc4j.core.annotation.OslcNamespace;
import org.eclipse.lyo.oslc4j.core.annotation.OslcOccurs;
import org.eclipse.lyo.oslc4j.core.annotation.OslcPropertyDefinition;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRdfCollectionType;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRange;
import org.eclipse.lyo.oslc4j.core.annotation.OslcReadOnly;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRepresentation;
import org.eclipse.lyo.oslc4j.core.annotation.OslcResourceShape;
import org.eclipse.lyo.oslc4j.core.annotation.OslcTitle;
import org.eclipse.lyo.oslc4j.core.annotation.OslcValueType;
import org.eclipse.lyo.oslc4j.core.model.AbstractResource;
import org.eclipse.lyo.oslc4j.core.model.Link;
import org.eclipse.lyo.oslc4j.core.model.Occurs;
import org.eclipse.lyo.oslc4j.core.model.OslcConstants;
import org.eclipse.lyo.oslc4j.core.model.Representation;
import org.eclipse.lyo.oslc4j.core.model.ValueType;

import org.oasis.oslcop.sysml.SysmlDomainConstants;
import org.oasis.oslcop.sysml.SysmlDomainConstants;

import org.oasis.oslcop.sysml.IAnnotation;
import org.oasis.oslcop.sysml.IComment;
import org.oasis.oslcop.sysml.IConjugation;
import org.oasis.oslcop.sysml.IDocumentation;
import org.oasis.oslcop.sysml.IElement;
import org.oasis.oslcop.sysml.IFeature;
import org.oasis.oslcop.sysml.IFeatureMembership;
import org.oasis.oslcop.sysml.IFeatureTyping;
import org.oasis.oslcop.sysml.IGeneralization;
import org.oasis.oslcop.sysml.ISysmlImport;
import org.oasis.oslcop.sysml.IMembership;
import org.oasis.oslcop.sysml.IMultiplicity;
import org.oasis.oslcop.sysml.INamespace;
import org.eclipse.lyo.oslc.domains.IPerson;
import org.oasis.oslcop.sysml.IRedefinition;
import org.oasis.oslcop.sysml.IRelationship;
import org.oasis.oslcop.sysml.ISubsetting;
import org.oasis.oslcop.sysml.ITextualRepresentation;
import org.oasis.oslcop.sysml.IType;
import org.oasis.oslcop.sysml.ITypeFeaturing;
// Start of user code imports
// End of user code

@OslcNamespace(SysmlDomainConstants.FEATURE_NAMESPACE)
@OslcName(SysmlDomainConstants.FEATURE_LOCALNAME)
@OslcResourceShape(title = "Feature Resource Shape", describes = SysmlDomainConstants.FEATURE_TYPE)
public interface IFeature
{

    public void addOwnedTypeFeaturing(final Link ownedTypeFeaturing );
    public void addSysmlType(final Link type );
    public void addOwnedRedefinition(final Link ownedRedefinition );
    public void addOwnedSubsetting(final Link ownedSubsetting );
    public void addOwnedTyping(final Link ownedTyping );
    public void addFeaturingType(final Link featuringType );

    @OslcName("isUnique")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "isUnique")
    @OslcOccurs(Occurs.ExactlyOne)
    @OslcValueType(ValueType.Boolean)
    @OslcReadOnly(false)
    public Boolean isIsUnique();

    @OslcName("isOrdered")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "isOrdered")
    @OslcOccurs(Occurs.ExactlyOne)
    @OslcValueType(ValueType.Boolean)
    @OslcReadOnly(false)
    public Boolean isIsOrdered();

    @OslcName("isComposite")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "isComposite")
    @OslcOccurs(Occurs.ExactlyOne)
    @OslcValueType(ValueType.Boolean)
    @OslcReadOnly(false)
    public Boolean isIsComposite();

    @OslcName("isEnd")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "isEnd")
    @OslcOccurs(Occurs.ExactlyOne)
    @OslcValueType(ValueType.Boolean)
    @OslcReadOnly(false)
    public Boolean isIsEnd();

    @OslcName("isNonunique")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "isNonunique")
    @OslcOccurs(Occurs.ExactlyOne)
    @OslcValueType(ValueType.Boolean)
    @OslcReadOnly(false)
    public Boolean isIsNonunique();

    @OslcName("ownedTypeFeaturing")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "ownedTypeFeaturing")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.TYPEFEATURING_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getOwnedTypeFeaturing();

    @OslcName("owningFeatureMembership")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "owningFeatureMembership")
    @OslcOccurs(Occurs.ZeroOrOne)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.FEATUREMEMBERSHIP_TYPE})
    @OslcReadOnly(false)
    public Link getOwningFeatureMembership();

    @OslcName("owningType")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "owningType")
    @OslcOccurs(Occurs.ZeroOrOne)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.TYPE_TYPE})
    @OslcReadOnly(false)
    public Link getOwningType();

    @OslcName("endOwningType")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "endOwningType")
    @OslcOccurs(Occurs.ZeroOrOne)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.TYPE_TYPE})
    @OslcReadOnly(false)
    public Link getEndOwningType();

    @OslcName("type")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "type")
    @OslcOccurs(Occurs.OneOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.TYPE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getSysmlType();

    @OslcName("ownedRedefinition")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "ownedRedefinition")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.REDEFINITION_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getOwnedRedefinition();

    @OslcName("ownedSubsetting")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "ownedSubsetting")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.SUBSETTING_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getOwnedSubsetting();

    @OslcName("ownedTyping")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "ownedTyping")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.FEATURETYPING_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getOwnedTyping();

    @OslcName("featuringType")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "featuringType")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.TYPE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getFeaturingType();


    public void setIsUnique(final Boolean isUnique );
    public void setIsOrdered(final Boolean isOrdered );
    public void setIsComposite(final Boolean isComposite );
    public void setIsEnd(final Boolean isEnd );
    public void setIsNonunique(final Boolean isNonunique );
    public void setOwnedTypeFeaturing(final Set<Link> ownedTypeFeaturing );
    public void setOwningFeatureMembership(final Link owningFeatureMembership );
    public void setOwningType(final Link owningType );
    public void setEndOwningType(final Link endOwningType );
    public void setSysmlType(final Set<Link> type );
    public void setOwnedRedefinition(final Set<Link> ownedRedefinition );
    public void setOwnedSubsetting(final Set<Link> ownedSubsetting );
    public void setOwnedTyping(final Set<Link> ownedTyping );
    public void setFeaturingType(final Set<Link> featuringType );
}

