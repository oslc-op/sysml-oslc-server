// Start of user code Copyright
/*
 * Copyright (c) 2020 Contributors to the Eclipse Foundation
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Distribution License 1.0 which is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * SPDX-License-Identifier: BSD-3-Simple
 *
 * This file is generated by Lyo Designer (https://www.eclipse.org/lyo/)
 */
// End of user code

package org.oasis.oslcop.sysml;

import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.text.SimpleDateFormat;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;
import java.util.Iterator;

import org.eclipse.lyo.oslc4j.core.OSLC4JUtils;
import org.eclipse.lyo.oslc4j.core.exception.OslcCoreApplicationException;
import org.eclipse.lyo.oslc4j.core.annotation.OslcAllowedValue;
import org.eclipse.lyo.oslc4j.core.annotation.OslcDescription;
import org.eclipse.lyo.oslc4j.core.annotation.OslcMemberProperty;
import org.eclipse.lyo.oslc4j.core.annotation.OslcName;
import org.eclipse.lyo.oslc4j.core.annotation.OslcNamespace;
import org.eclipse.lyo.oslc4j.core.annotation.OslcOccurs;
import org.eclipse.lyo.oslc4j.core.annotation.OslcPropertyDefinition;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRdfCollectionType;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRange;
import org.eclipse.lyo.oslc4j.core.annotation.OslcReadOnly;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRepresentation;
import org.eclipse.lyo.oslc4j.core.annotation.OslcResourceShape;
import org.eclipse.lyo.oslc4j.core.annotation.OslcTitle;
import org.eclipse.lyo.oslc4j.core.annotation.OslcValueType;
import org.eclipse.lyo.oslc4j.core.model.AbstractResource;
import org.eclipse.lyo.oslc4j.core.model.Link;
import org.eclipse.lyo.oslc4j.core.model.Occurs;
import org.eclipse.lyo.oslc4j.core.model.OslcConstants;
import org.eclipse.lyo.oslc4j.core.model.Representation;
import org.eclipse.lyo.oslc4j.core.model.ValueType;
import org.eclipse.lyo.oslc4j.core.model.ResourceShape;
import org.eclipse.lyo.oslc4j.core.model.ResourceShapeFactory;

import org.oasis.oslcop.sysml.SysmlDomainConstants;
import org.oasis.oslcop.sysml.Connector;
import org.oasis.oslcop.sysml.IStep;
import org.oasis.oslcop.sysml.SysmlDomainConstants;

import org.oasis.oslcop.sysml.Annotation;
import org.oasis.oslcop.sysml.Association;
import org.oasis.oslcop.sysml.Behavior;
import org.oasis.oslcop.sysml.Classifier;
import org.oasis.oslcop.sysml.Comment;
import org.oasis.oslcop.sysml.Conjugation;
import org.oasis.oslcop.sysml.Documentation;
import org.oasis.oslcop.sysml.Element;
import org.oasis.oslcop.sysml.Feature;
import org.oasis.oslcop.sysml.FeatureMembership;
import org.oasis.oslcop.sysml.FeatureTyping;
import org.oasis.oslcop.sysml.Generalization;
import org.oasis.oslcop.sysml.SysmlImport;
import org.oasis.oslcop.sysml.ItemFeature;
import org.oasis.oslcop.sysml.ItemFlowEnd;
import org.oasis.oslcop.sysml.ItemFlowFeature;
import org.oasis.oslcop.sysml.Membership;
import org.oasis.oslcop.sysml.Multiplicity;
import org.oasis.oslcop.sysml.Namespace;
import org.eclipse.lyo.oslc.domains.Person;
import org.oasis.oslcop.sysml.Redefinition;
import org.oasis.oslcop.sysml.Relationship;
import org.oasis.oslcop.sysml.Subsetting;
import org.oasis.oslcop.sysml.TextualRepresentation;
import org.oasis.oslcop.sysml.Type;
import org.oasis.oslcop.sysml.TypeFeaturing;
// Start of user code imports
// End of user code

// Start of user code preClassCode
// End of user code

// Start of user code classAnnotations
// End of user code
@OslcNamespace(SysmlDomainConstants.ITEMFLOW_NAMESPACE)
@OslcName(SysmlDomainConstants.ITEMFLOW_LOCALNAME)
@OslcResourceShape(title = "ItemFlow Resource Shape", describes = SysmlDomainConstants.ITEMFLOW_TYPE)
public class ItemFlow
    extends Connector
    implements IItemFlow, IStep
{
    // Start of user code attributeAnnotation:itemType
    // End of user code
    private Set<Link> itemType = new HashSet<Link>();
    // Start of user code attributeAnnotation:targetInputFeature
    // End of user code
    private Set<Link> targetInputFeature = new HashSet<Link>();
    // Start of user code attributeAnnotation:sourceOutputFeature
    // End of user code
    private Set<Link> sourceOutputFeature = new HashSet<Link>();
    // Start of user code attributeAnnotation:itemFlowEnd
    // End of user code
    private Set<Link> itemFlowEnd = new HashSet<Link>();
    // Start of user code attributeAnnotation:itemFeature
    // End of user code
    private Set<Link> itemFeature = new HashSet<Link>();
    // Start of user code attributeAnnotation:itemFlowFeature
    // End of user code
    private Set<Link> itemFlowFeature = new HashSet<Link>();
    // Start of user code attributeAnnotation:behavior
    // End of user code
    private Set<Link> behavior = new HashSet<Link>();
    // Start of user code attributeAnnotation:parameter
    // End of user code
    private Set<Link> parameter = new HashSet<Link>();
    
    // Start of user code classAttributes
    // End of user code
    // Start of user code classMethods
    // End of user code
    public ItemFlow()
    {
        super();
    
        // Start of user code constructor1
        // End of user code
    }
    
    public ItemFlow(final URI about)
    {
        super(about);
    
        // Start of user code constructor2
        // End of user code
    }
    
    public static ResourceShape createResourceShape() throws OslcCoreApplicationException, URISyntaxException {
        return ResourceShapeFactory.createResourceShape(OSLC4JUtils.getServletURI(),
        OslcConstants.PATH_RESOURCE_SHAPES,
        SysmlDomainConstants.ITEMFLOW_PATH,
        ItemFlow.class);
    }
    
    
    public String toString()
    {
        return toString(false);
    }
    
    public String toString(boolean asLocalResource)
    {
        String result = "";
        // Start of user code toString_init
        // End of user code
    
        if (asLocalResource) {
            result = result + "{a Local ItemFlow Resource} - update ItemFlow.toString() to present resource as desired.";
            // Start of user code toString_bodyForLocalResource
            // End of user code
        }
        else {
            result = String.valueOf(getAbout());
        }
    
        // Start of user code toString_finalize
        result = getShortTitle();
        // End of user code
    
        return result;
    }
    
    public void addItemType(final Link itemType)
    {
        this.itemType.add(itemType);
    }
    
    public void addTargetInputFeature(final Link targetInputFeature)
    {
        this.targetInputFeature.add(targetInputFeature);
    }
    
    public void addSourceOutputFeature(final Link sourceOutputFeature)
    {
        this.sourceOutputFeature.add(sourceOutputFeature);
    }
    
    public void addItemFlowEnd(final Link itemFlowEnd)
    {
        this.itemFlowEnd.add(itemFlowEnd);
    }
    
    public void addItemFeature(final Link itemFeature)
    {
        this.itemFeature.add(itemFeature);
    }
    
    public void addItemFlowFeature(final Link itemFlowFeature)
    {
        this.itemFlowFeature.add(itemFlowFeature);
    }
    
    public void addBehavior(final Link behavior)
    {
        this.behavior.add(behavior);
    }
    
    public void addParameter(final Link parameter)
    {
        this.parameter.add(parameter);
    }
    
    
    // Start of user code getterAnnotation:itemType
    // End of user code
    @OslcName("itemType")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "itemType")
    @OslcOccurs(Occurs.OneOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.CLASSIFIER_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getItemType()
    {
        // Start of user code getterInit:itemType
        // End of user code
        return itemType;
    }
    
    // Start of user code getterAnnotation:targetInputFeature
    // End of user code
    @OslcName("targetInputFeature")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "targetInputFeature")
    @OslcOccurs(Occurs.OneOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.FEATURE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getTargetInputFeature()
    {
        // Start of user code getterInit:targetInputFeature
        // End of user code
        return targetInputFeature;
    }
    
    // Start of user code getterAnnotation:sourceOutputFeature
    // End of user code
    @OslcName("sourceOutputFeature")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "sourceOutputFeature")
    @OslcOccurs(Occurs.OneOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.FEATURE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getSourceOutputFeature()
    {
        // Start of user code getterInit:sourceOutputFeature
        // End of user code
        return sourceOutputFeature;
    }
    
    // Start of user code getterAnnotation:itemFlowEnd
    // End of user code
    @OslcName("itemFlowEnd")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "itemFlowEnd")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.ITEMFLOWEND_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getItemFlowEnd()
    {
        // Start of user code getterInit:itemFlowEnd
        // End of user code
        return itemFlowEnd;
    }
    
    // Start of user code getterAnnotation:itemFeature
    // End of user code
    @OslcName("itemFeature")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "itemFeature")
    @OslcOccurs(Occurs.OneOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.ITEMFEATURE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getItemFeature()
    {
        // Start of user code getterInit:itemFeature
        // End of user code
        return itemFeature;
    }
    
    // Start of user code getterAnnotation:itemFlowFeature
    // End of user code
    @OslcName("itemFlowFeature")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "itemFlowFeature")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.ITEMFLOWFEATURE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getItemFlowFeature()
    {
        // Start of user code getterInit:itemFlowFeature
        // End of user code
        return itemFlowFeature;
    }
    
    // Start of user code getterAnnotation:behavior
    // End of user code
    @OslcName("behavior")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "behavior")
    @OslcOccurs(Occurs.OneOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.BEHAVIOR_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getBehavior()
    {
        // Start of user code getterInit:behavior
        // End of user code
        return behavior;
    }
    
    // Start of user code getterAnnotation:parameter
    // End of user code
    @OslcName("parameter")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "parameter")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.FEATURE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getParameter()
    {
        // Start of user code getterInit:parameter
        // End of user code
        return parameter;
    }
    
    
    // Start of user code setterAnnotation:itemType
    // End of user code
    public void setItemType(final Set<Link> itemType )
    {
        // Start of user code setterInit:itemType
        // End of user code
        this.itemType.clear();
        if (itemType != null)
        {
            this.itemType.addAll(itemType);
        }
    
        // Start of user code setterFinalize:itemType
        // End of user code
    }
    
    // Start of user code setterAnnotation:targetInputFeature
    // End of user code
    public void setTargetInputFeature(final Set<Link> targetInputFeature )
    {
        // Start of user code setterInit:targetInputFeature
        // End of user code
        this.targetInputFeature.clear();
        if (targetInputFeature != null)
        {
            this.targetInputFeature.addAll(targetInputFeature);
        }
    
        // Start of user code setterFinalize:targetInputFeature
        // End of user code
    }
    
    // Start of user code setterAnnotation:sourceOutputFeature
    // End of user code
    public void setSourceOutputFeature(final Set<Link> sourceOutputFeature )
    {
        // Start of user code setterInit:sourceOutputFeature
        // End of user code
        this.sourceOutputFeature.clear();
        if (sourceOutputFeature != null)
        {
            this.sourceOutputFeature.addAll(sourceOutputFeature);
        }
    
        // Start of user code setterFinalize:sourceOutputFeature
        // End of user code
    }
    
    // Start of user code setterAnnotation:itemFlowEnd
    // End of user code
    public void setItemFlowEnd(final Set<Link> itemFlowEnd )
    {
        // Start of user code setterInit:itemFlowEnd
        // End of user code
        this.itemFlowEnd.clear();
        if (itemFlowEnd != null)
        {
            this.itemFlowEnd.addAll(itemFlowEnd);
        }
    
        // Start of user code setterFinalize:itemFlowEnd
        // End of user code
    }
    
    // Start of user code setterAnnotation:itemFeature
    // End of user code
    public void setItemFeature(final Set<Link> itemFeature )
    {
        // Start of user code setterInit:itemFeature
        // End of user code
        this.itemFeature.clear();
        if (itemFeature != null)
        {
            this.itemFeature.addAll(itemFeature);
        }
    
        // Start of user code setterFinalize:itemFeature
        // End of user code
    }
    
    // Start of user code setterAnnotation:itemFlowFeature
    // End of user code
    public void setItemFlowFeature(final Set<Link> itemFlowFeature )
    {
        // Start of user code setterInit:itemFlowFeature
        // End of user code
        this.itemFlowFeature.clear();
        if (itemFlowFeature != null)
        {
            this.itemFlowFeature.addAll(itemFlowFeature);
        }
    
        // Start of user code setterFinalize:itemFlowFeature
        // End of user code
    }
    
    // Start of user code setterAnnotation:behavior
    // End of user code
    public void setBehavior(final Set<Link> behavior )
    {
        // Start of user code setterInit:behavior
        // End of user code
        this.behavior.clear();
        if (behavior != null)
        {
            this.behavior.addAll(behavior);
        }
    
        // Start of user code setterFinalize:behavior
        // End of user code
    }
    
    // Start of user code setterAnnotation:parameter
    // End of user code
    public void setParameter(final Set<Link> parameter )
    {
        // Start of user code setterInit:parameter
        // End of user code
        this.parameter.clear();
        if (parameter != null)
        {
            this.parameter.addAll(parameter);
        }
    
        // Start of user code setterFinalize:parameter
        // End of user code
    }
    
    
}
