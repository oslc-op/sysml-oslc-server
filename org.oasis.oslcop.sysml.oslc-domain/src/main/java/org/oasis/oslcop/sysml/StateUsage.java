// Start of user code Copyright
/*
 * Copyright (c) 2020 Contributors to the Eclipse Foundation
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Distribution License 1.0 which is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * SPDX-License-Identifier: BSD-3-Simple
 *
 * This file is generated by Lyo Designer (https://www.eclipse.org/lyo/)
 */
// End of user code

package org.oasis.oslcop.sysml;

import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.text.SimpleDateFormat;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;
import java.util.Iterator;

import org.eclipse.lyo.oslc4j.core.OSLC4JUtils;
import org.eclipse.lyo.oslc4j.core.exception.OslcCoreApplicationException;
import org.eclipse.lyo.oslc4j.core.annotation.OslcAllowedValue;
import org.eclipse.lyo.oslc4j.core.annotation.OslcDescription;
import org.eclipse.lyo.oslc4j.core.annotation.OslcMemberProperty;
import org.eclipse.lyo.oslc4j.core.annotation.OslcName;
import org.eclipse.lyo.oslc4j.core.annotation.OslcNamespace;
import org.eclipse.lyo.oslc4j.core.annotation.OslcOccurs;
import org.eclipse.lyo.oslc4j.core.annotation.OslcPropertyDefinition;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRdfCollectionType;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRange;
import org.eclipse.lyo.oslc4j.core.annotation.OslcReadOnly;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRepresentation;
import org.eclipse.lyo.oslc4j.core.annotation.OslcResourceShape;
import org.eclipse.lyo.oslc4j.core.annotation.OslcTitle;
import org.eclipse.lyo.oslc4j.core.annotation.OslcValueType;
import org.eclipse.lyo.oslc4j.core.model.AbstractResource;
import org.eclipse.lyo.oslc4j.core.model.Link;
import org.eclipse.lyo.oslc4j.core.model.Occurs;
import org.eclipse.lyo.oslc4j.core.model.OslcConstants;
import org.eclipse.lyo.oslc4j.core.model.Representation;
import org.eclipse.lyo.oslc4j.core.model.ValueType;
import org.eclipse.lyo.oslc4j.core.model.ResourceShape;
import org.eclipse.lyo.oslc4j.core.model.ResourceShapeFactory;

import org.oasis.oslcop.sysml.SysmlDomainConstants;
import org.oasis.oslcop.sysml.ActionUsage;

import org.oasis.oslcop.sysml.SysmlDomainConstants;

import org.oasis.oslcop.sysml.ActionUsage;
import org.oasis.oslcop.sysml.AnalysisCaseUsage;
import org.oasis.oslcop.sysml.AttributeUsage;
import org.oasis.oslcop.sysml.Behavior;
import org.oasis.oslcop.sysml.CalculationUsage;
import org.oasis.oslcop.sysml.CaseUsage;
import org.oasis.oslcop.sysml.Conjugation;
import org.oasis.oslcop.sysml.ConnectionUsage;
import org.oasis.oslcop.sysml.ConstraintUsage;
import org.oasis.oslcop.sysml.Definition;
import org.oasis.oslcop.sysml.Element;
import org.oasis.oslcop.sysml.Feature;
import org.oasis.oslcop.sysml.FeatureMembership;
import org.oasis.oslcop.sysml.FeatureTyping;
import org.oasis.oslcop.sysml.Generalization;
import org.oasis.oslcop.sysml.SysmlImport;
import org.oasis.oslcop.sysml.IndividualUsage;
import org.oasis.oslcop.sysml.InterfaceUsage;
import org.oasis.oslcop.sysml.ItemUsage;
import org.oasis.oslcop.sysml.Membership;
import org.oasis.oslcop.sysml.Multiplicity;
import org.oasis.oslcop.sysml.SysmlPackage;
import org.oasis.oslcop.sysml.PartUsage;
import org.eclipse.lyo.oslc.domains.Person;
import org.oasis.oslcop.sysml.PortUsage;
import org.oasis.oslcop.sysml.Redefinition;
import org.oasis.oslcop.sysml.ReferenceUsage;
import org.oasis.oslcop.sysml.Relationship;
import org.oasis.oslcop.sysml.RequirementUsage;
import org.oasis.oslcop.sysml.StateUsage;
import org.oasis.oslcop.sysml.Subsetting;
import org.oasis.oslcop.sysml.TransitionUsage;
import org.oasis.oslcop.sysml.Type;
import org.oasis.oslcop.sysml.Usage;
import org.oasis.oslcop.sysml.VariantMembership;
// Start of user code imports
// End of user code

// Start of user code preClassCode
// End of user code

// Start of user code classAnnotations
// End of user code
@OslcNamespace(SysmlDomainConstants.STATEUSAGE_NAMESPACE)
@OslcName(SysmlDomainConstants.STATEUSAGE_LOCALNAME)
@OslcResourceShape(title = "StateUsage Resource Shape", describes = SysmlDomainConstants.STATEUSAGE_TYPE)
public class StateUsage
    extends ActionUsage
    implements IStateUsage
{
    // Start of user code attributeAnnotation:stateDefinition
    // End of user code
    private Set<Link> stateDefinition = new HashSet<Link>();
    // Start of user code attributeAnnotation:entryAction
    // End of user code
    private Link entryAction;
    // Start of user code attributeAnnotation:doAction
    // End of user code
    private Link doAction;
    // Start of user code attributeAnnotation:exitAction
    // End of user code
    private Link exitAction;
    
    // Start of user code classAttributes
    // End of user code
    // Start of user code classMethods
    // End of user code
    public StateUsage()
    {
        super();
    
        // Start of user code constructor1
        // End of user code
    }
    
    public StateUsage(final URI about)
    {
        super(about);
    
        // Start of user code constructor2
        // End of user code
    }
    
    public static ResourceShape createResourceShape() throws OslcCoreApplicationException, URISyntaxException {
        return ResourceShapeFactory.createResourceShape(OSLC4JUtils.getServletURI(),
        OslcConstants.PATH_RESOURCE_SHAPES,
        SysmlDomainConstants.STATEUSAGE_PATH,
        StateUsage.class);
    }
    
    
    public String toString()
    {
        return toString(false);
    }
    
    public String toString(boolean asLocalResource)
    {
        String result = "";
        // Start of user code toString_init
        // End of user code
    
        if (asLocalResource) {
            result = result + "{a Local StateUsage Resource} - update StateUsage.toString() to present resource as desired.";
            // Start of user code toString_bodyForLocalResource
            // End of user code
        }
        else {
            result = String.valueOf(getAbout());
        }
    
        // Start of user code toString_finalize
        result = getShortTitle();
        // End of user code
    
        return result;
    }
    
    public void addStateDefinition(final Link stateDefinition)
    {
        this.stateDefinition.add(stateDefinition);
    }
    
    
    // Start of user code getterAnnotation:stateDefinition
    // End of user code
    @OslcName("stateDefinition")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "stateDefinition")
    @OslcOccurs(Occurs.OneOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.BEHAVIOR_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getStateDefinition()
    {
        // Start of user code getterInit:stateDefinition
        // End of user code
        return stateDefinition;
    }
    
    // Start of user code getterAnnotation:entryAction
    // End of user code
    @OslcName("entryAction")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "entryAction")
    @OslcOccurs(Occurs.ZeroOrOne)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.ACTIONUSAGE_TYPE})
    @OslcReadOnly(false)
    public Link getEntryAction()
    {
        // Start of user code getterInit:entryAction
        // End of user code
        return entryAction;
    }
    
    // Start of user code getterAnnotation:doAction
    // End of user code
    @OslcName("doAction")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "doAction")
    @OslcOccurs(Occurs.ZeroOrOne)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.ACTIONUSAGE_TYPE})
    @OslcReadOnly(false)
    public Link getDoAction()
    {
        // Start of user code getterInit:doAction
        // End of user code
        return doAction;
    }
    
    // Start of user code getterAnnotation:exitAction
    // End of user code
    @OslcName("exitAction")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "exitAction")
    @OslcOccurs(Occurs.ZeroOrOne)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.ACTIONUSAGE_TYPE})
    @OslcReadOnly(false)
    public Link getExitAction()
    {
        // Start of user code getterInit:exitAction
        // End of user code
        return exitAction;
    }
    
    
    // Start of user code setterAnnotation:stateDefinition
    // End of user code
    public void setStateDefinition(final Set<Link> stateDefinition )
    {
        // Start of user code setterInit:stateDefinition
        // End of user code
        this.stateDefinition.clear();
        if (stateDefinition != null)
        {
            this.stateDefinition.addAll(stateDefinition);
        }
    
        // Start of user code setterFinalize:stateDefinition
        // End of user code
    }
    
    // Start of user code setterAnnotation:entryAction
    // End of user code
    public void setEntryAction(final Link entryAction )
    {
        // Start of user code setterInit:entryAction
        // End of user code
        this.entryAction = entryAction;
    
        // Start of user code setterFinalize:entryAction
        // End of user code
    }
    
    // Start of user code setterAnnotation:doAction
    // End of user code
    public void setDoAction(final Link doAction )
    {
        // Start of user code setterInit:doAction
        // End of user code
        this.doAction = doAction;
    
        // Start of user code setterFinalize:doAction
        // End of user code
    }
    
    // Start of user code setterAnnotation:exitAction
    // End of user code
    public void setExitAction(final Link exitAction )
    {
        // Start of user code setterInit:exitAction
        // End of user code
        this.exitAction = exitAction;
    
        // Start of user code setterFinalize:exitAction
        // End of user code
    }
    
    
}
