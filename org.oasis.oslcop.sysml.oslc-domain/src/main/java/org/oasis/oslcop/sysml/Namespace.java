// Start of user code Copyright
/*
 * Copyright (c) 2020 Contributors to the Eclipse Foundation
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Distribution License 1.0 which is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * SPDX-License-Identifier: BSD-3-Simple
 *
 * This file is generated by Lyo Designer (https://www.eclipse.org/lyo/)
 */
// End of user code

package org.oasis.oslcop.sysml;

import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.text.SimpleDateFormat;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;
import java.util.Iterator;

import org.eclipse.lyo.oslc4j.core.OSLC4JUtils;
import org.eclipse.lyo.oslc4j.core.exception.OslcCoreApplicationException;
import org.eclipse.lyo.oslc4j.core.annotation.OslcAllowedValue;
import org.eclipse.lyo.oslc4j.core.annotation.OslcDescription;
import org.eclipse.lyo.oslc4j.core.annotation.OslcMemberProperty;
import org.eclipse.lyo.oslc4j.core.annotation.OslcName;
import org.eclipse.lyo.oslc4j.core.annotation.OslcNamespace;
import org.eclipse.lyo.oslc4j.core.annotation.OslcOccurs;
import org.eclipse.lyo.oslc4j.core.annotation.OslcPropertyDefinition;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRdfCollectionType;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRange;
import org.eclipse.lyo.oslc4j.core.annotation.OslcReadOnly;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRepresentation;
import org.eclipse.lyo.oslc4j.core.annotation.OslcResourceShape;
import org.eclipse.lyo.oslc4j.core.annotation.OslcTitle;
import org.eclipse.lyo.oslc4j.core.annotation.OslcValueType;
import org.eclipse.lyo.oslc4j.core.model.AbstractResource;
import org.eclipse.lyo.oslc4j.core.model.Link;
import org.eclipse.lyo.oslc4j.core.model.Occurs;
import org.eclipse.lyo.oslc4j.core.model.OslcConstants;
import org.eclipse.lyo.oslc4j.core.model.Representation;
import org.eclipse.lyo.oslc4j.core.model.ValueType;
import org.eclipse.lyo.oslc4j.core.model.ResourceShape;
import org.eclipse.lyo.oslc4j.core.model.ResourceShapeFactory;

import org.oasis.oslcop.sysml.SysmlDomainConstants;
import org.oasis.oslcop.sysml.Element;

import org.oasis.oslcop.sysml.SysmlDomainConstants;

import org.oasis.oslcop.sysml.Annotation;
import org.oasis.oslcop.sysml.Comment;
import org.oasis.oslcop.sysml.Documentation;
import org.oasis.oslcop.sysml.Element;
import org.oasis.oslcop.sysml.SysmlImport;
import org.oasis.oslcop.sysml.Membership;
import org.oasis.oslcop.sysml.Namespace;
import org.eclipse.lyo.oslc.domains.Person;
import org.oasis.oslcop.sysml.Relationship;
import org.oasis.oslcop.sysml.TextualRepresentation;
// Start of user code imports
// End of user code

// Start of user code preClassCode
// End of user code

// Start of user code classAnnotations
// End of user code
@OslcNamespace(SysmlDomainConstants.NAMESPACE_NAMESPACE)
@OslcName(SysmlDomainConstants.NAMESPACE_LOCALNAME)
@OslcResourceShape(title = "Namespace Resource Shape", describes = SysmlDomainConstants.NAMESPACE_TYPE)
public class Namespace
    extends Element
    implements INamespace
{
    // Start of user code attributeAnnotation:ownedMembership_comp
    // End of user code
    private Set<Link> ownedMembership_comp = new HashSet<Link>();
    // Start of user code attributeAnnotation:ownedMember
    // End of user code
    private Set<Link> ownedMember = new HashSet<Link>();
    // Start of user code attributeAnnotation:membership
    // End of user code
    private Set<Link> membership = new HashSet<Link>();
    // Start of user code attributeAnnotation:ownedImport_comp
    // End of user code
    private Set<Link> ownedImport_comp = new HashSet<Link>();
    // Start of user code attributeAnnotation:member
    // End of user code
    private Set<Link> member = new HashSet<Link>();
    // Start of user code attributeAnnotation:importedMembership
    // End of user code
    private Set<Link> importedMembership = new HashSet<Link>();
    // Start of user code attributeAnnotation:ownedMembership
    // End of user code
    private Set<Link> ownedMembership = new HashSet<Link>();
    // Start of user code attributeAnnotation:ownedImport
    // End of user code
    private Set<Link> ownedImport = new HashSet<Link>();
    
    // Start of user code classAttributes
    // End of user code
    // Start of user code classMethods
    // End of user code
    public Namespace()
    {
        super();
    
        // Start of user code constructor1
        // End of user code
    }
    
    public Namespace(final URI about)
    {
        super(about);
    
        // Start of user code constructor2
        // End of user code
    }
    
    public static ResourceShape createResourceShape() throws OslcCoreApplicationException, URISyntaxException {
        return ResourceShapeFactory.createResourceShape(OSLC4JUtils.getServletURI(),
        OslcConstants.PATH_RESOURCE_SHAPES,
        SysmlDomainConstants.NAMESPACE_PATH,
        Namespace.class);
    }
    
    
    public String toString()
    {
        return toString(false);
    }
    
    public String toString(boolean asLocalResource)
    {
        String result = "";
        // Start of user code toString_init
        // End of user code
    
        if (asLocalResource) {
            result = result + "{a Local Namespace Resource} - update Namespace.toString() to present resource as desired.";
            // Start of user code toString_bodyForLocalResource
            // End of user code
        }
        else {
            result = String.valueOf(getAbout());
        }
    
        // Start of user code toString_finalize
        result = getShortTitle();
        // End of user code
    
        return result;
    }
    
    public void addOwnedMembership_comp(final Link ownedMembership_comp)
    {
        this.ownedMembership_comp.add(ownedMembership_comp);
    }
    
    public void addOwnedMember(final Link ownedMember)
    {
        this.ownedMember.add(ownedMember);
    }
    
    public void addMembership(final Link membership)
    {
        this.membership.add(membership);
    }
    
    public void addOwnedImport_comp(final Link ownedImport_comp)
    {
        this.ownedImport_comp.add(ownedImport_comp);
    }
    
    public void addMember(final Link member)
    {
        this.member.add(member);
    }
    
    public void addImportedMembership(final Link importedMembership)
    {
        this.importedMembership.add(importedMembership);
    }
    
    public void addOwnedMembership(final Link ownedMembership)
    {
        this.ownedMembership.add(ownedMembership);
    }
    
    public void addOwnedImport(final Link ownedImport)
    {
        this.ownedImport.add(ownedImport);
    }
    
    
    // Start of user code getterAnnotation:ownedMembership_comp
    // End of user code
    @OslcName("ownedMembership_comp")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "ownedMembership_comp")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.MEMBERSHIP_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getOwnedMembership_comp()
    {
        // Start of user code getterInit:ownedMembership_comp
        // End of user code
        return ownedMembership_comp;
    }
    
    // Start of user code getterAnnotation:ownedMember
    // End of user code
    @OslcName("ownedMember")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "ownedMember")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.ELEMENT_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getOwnedMember()
    {
        // Start of user code getterInit:ownedMember
        // End of user code
        return ownedMember;
    }
    
    // Start of user code getterAnnotation:membership
    // End of user code
    @OslcName("membership")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "membership")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.MEMBERSHIP_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getMembership()
    {
        // Start of user code getterInit:membership
        // End of user code
        return membership;
    }
    
    // Start of user code getterAnnotation:ownedImport_comp
    // End of user code
    @OslcName("ownedImport_comp")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "ownedImport_comp")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.IMPORT_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getOwnedImport_comp()
    {
        // Start of user code getterInit:ownedImport_comp
        // End of user code
        return ownedImport_comp;
    }
    
    // Start of user code getterAnnotation:member
    // End of user code
    @OslcName("member")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "member")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.ELEMENT_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getMember()
    {
        // Start of user code getterInit:member
        // End of user code
        return member;
    }
    
    // Start of user code getterAnnotation:importedMembership
    // End of user code
    @OslcName("importedMembership")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "importedMembership")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.MEMBERSHIP_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getImportedMembership()
    {
        // Start of user code getterInit:importedMembership
        // End of user code
        return importedMembership;
    }
    
    // Start of user code getterAnnotation:ownedMembership
    // End of user code
    @OslcName("ownedMembership")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "ownedMembership")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.MEMBERSHIP_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getOwnedMembership()
    {
        // Start of user code getterInit:ownedMembership
        // End of user code
        return ownedMembership;
    }
    
    // Start of user code getterAnnotation:ownedImport
    // End of user code
    @OslcName("ownedImport")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "ownedImport")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.IMPORT_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getOwnedImport()
    {
        // Start of user code getterInit:ownedImport
        // End of user code
        return ownedImport;
    }
    
    
    // Start of user code setterAnnotation:ownedMembership_comp
    // End of user code
    public void setOwnedMembership_comp(final Set<Link> ownedMembership_comp )
    {
        // Start of user code setterInit:ownedMembership_comp
        // End of user code
        this.ownedMembership_comp.clear();
        if (ownedMembership_comp != null)
        {
            this.ownedMembership_comp.addAll(ownedMembership_comp);
        }
    
        // Start of user code setterFinalize:ownedMembership_comp
        // End of user code
    }
    
    // Start of user code setterAnnotation:ownedMember
    // End of user code
    public void setOwnedMember(final Set<Link> ownedMember )
    {
        // Start of user code setterInit:ownedMember
        // End of user code
        this.ownedMember.clear();
        if (ownedMember != null)
        {
            this.ownedMember.addAll(ownedMember);
        }
    
        // Start of user code setterFinalize:ownedMember
        // End of user code
    }
    
    // Start of user code setterAnnotation:membership
    // End of user code
    public void setMembership(final Set<Link> membership )
    {
        // Start of user code setterInit:membership
        // End of user code
        this.membership.clear();
        if (membership != null)
        {
            this.membership.addAll(membership);
        }
    
        // Start of user code setterFinalize:membership
        // End of user code
    }
    
    // Start of user code setterAnnotation:ownedImport_comp
    // End of user code
    public void setOwnedImport_comp(final Set<Link> ownedImport_comp )
    {
        // Start of user code setterInit:ownedImport_comp
        // End of user code
        this.ownedImport_comp.clear();
        if (ownedImport_comp != null)
        {
            this.ownedImport_comp.addAll(ownedImport_comp);
        }
    
        // Start of user code setterFinalize:ownedImport_comp
        // End of user code
    }
    
    // Start of user code setterAnnotation:member
    // End of user code
    public void setMember(final Set<Link> member )
    {
        // Start of user code setterInit:member
        // End of user code
        this.member.clear();
        if (member != null)
        {
            this.member.addAll(member);
        }
    
        // Start of user code setterFinalize:member
        // End of user code
    }
    
    // Start of user code setterAnnotation:importedMembership
    // End of user code
    public void setImportedMembership(final Set<Link> importedMembership )
    {
        // Start of user code setterInit:importedMembership
        // End of user code
        this.importedMembership.clear();
        if (importedMembership != null)
        {
            this.importedMembership.addAll(importedMembership);
        }
    
        // Start of user code setterFinalize:importedMembership
        // End of user code
    }
    
    // Start of user code setterAnnotation:ownedMembership
    // End of user code
    public void setOwnedMembership(final Set<Link> ownedMembership )
    {
        // Start of user code setterInit:ownedMembership
        // End of user code
        this.ownedMembership.clear();
        if (ownedMembership != null)
        {
            this.ownedMembership.addAll(ownedMembership);
        }
    
        // Start of user code setterFinalize:ownedMembership
        // End of user code
    }
    
    // Start of user code setterAnnotation:ownedImport
    // End of user code
    public void setOwnedImport(final Set<Link> ownedImport )
    {
        // Start of user code setterInit:ownedImport
        // End of user code
        this.ownedImport.clear();
        if (ownedImport != null)
        {
            this.ownedImport.addAll(ownedImport);
        }
    
        // Start of user code setterFinalize:ownedImport
        // End of user code
    }
    
    
}
