// Start of user code Copyright
/*
 * Copyright (c) 2020 Contributors to the Eclipse Foundation
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Distribution License 1.0 which is available at
 * http://www.eclipse.org/org/documents/edl-v10.php.
 *
 * SPDX-License-Identifier: BSD-3-Simple
 *
 * This file is generated by Lyo Designer (https://www.eclipse.org/lyo/)
 */
// End of user code

package org.oasis.oslcop.sysml;

import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.text.SimpleDateFormat;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;
import java.util.Iterator;

import org.eclipse.lyo.oslc4j.core.annotation.OslcAllowedValue;
import org.eclipse.lyo.oslc4j.core.annotation.OslcDescription;
import org.eclipse.lyo.oslc4j.core.annotation.OslcMemberProperty;
import org.eclipse.lyo.oslc4j.core.annotation.OslcName;
import org.eclipse.lyo.oslc4j.core.annotation.OslcNamespace;
import org.eclipse.lyo.oslc4j.core.annotation.OslcOccurs;
import org.eclipse.lyo.oslc4j.core.annotation.OslcPropertyDefinition;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRdfCollectionType;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRange;
import org.eclipse.lyo.oslc4j.core.annotation.OslcReadOnly;
import org.eclipse.lyo.oslc4j.core.annotation.OslcRepresentation;
import org.eclipse.lyo.oslc4j.core.annotation.OslcResourceShape;
import org.eclipse.lyo.oslc4j.core.annotation.OslcTitle;
import org.eclipse.lyo.oslc4j.core.annotation.OslcValueType;
import org.eclipse.lyo.oslc4j.core.model.AbstractResource;
import org.eclipse.lyo.oslc4j.core.model.Link;
import org.eclipse.lyo.oslc4j.core.model.Occurs;
import org.eclipse.lyo.oslc4j.core.model.OslcConstants;
import org.eclipse.lyo.oslc4j.core.model.Representation;
import org.eclipse.lyo.oslc4j.core.model.ValueType;

import org.oasis.oslcop.sysml.SysmlDomainConstants;
import org.oasis.oslcop.sysml.SysmlDomainConstants;

import org.oasis.oslcop.sysml.IActionUsage;
import org.oasis.oslcop.sysml.IAllocationUsage;
import org.oasis.oslcop.sysml.IAnalysisCaseUsage;
import org.oasis.oslcop.sysml.IAnnotation;
import org.oasis.oslcop.sysml.IAttributeUsage;
import org.oasis.oslcop.sysml.ICalculationUsage;
import org.oasis.oslcop.sysml.ICaseUsage;
import org.oasis.oslcop.sysml.IClassifier;
import org.oasis.oslcop.sysml.IComment;
import org.oasis.oslcop.sysml.IConcernUsage;
import org.oasis.oslcop.sysml.IConjugation;
import org.oasis.oslcop.sysml.IConnectorAsUsage;
import org.oasis.oslcop.sysml.IConstraintUsage;
import org.oasis.oslcop.sysml.IDefinition;
import org.oasis.oslcop.sysml.IDisjoining;
import org.oasis.oslcop.sysml.IDocumentation;
import org.oasis.oslcop.sysml.IElement;
import org.oasis.oslcop.sysml.IEnumerationUsage;
import org.oasis.oslcop.sysml.IFeature;
import org.oasis.oslcop.sysml.IFeatureChaining;
import org.oasis.oslcop.sysml.IFeatureMembership;
import org.oasis.oslcop.sysml.IFeatureTyping;
import org.oasis.oslcop.sysml.IFlowConnectionUsage;
import org.oasis.oslcop.sysml.ISysmlImport;
import org.oasis.oslcop.sysml.IInterfaceUsage;
import org.oasis.oslcop.sysml.IItemUsage;
import org.oasis.oslcop.sysml.IMembership;
import org.oasis.oslcop.sysml.IMultiplicity;
import org.oasis.oslcop.sysml.INamespace;
import org.oasis.oslcop.sysml.IOccurrenceUsage;
import org.oasis.oslcop.sysml.IPartUsage;
import org.eclipse.lyo.oslc.domains.IPerson;
import org.oasis.oslcop.sysml.IPortUsage;
import org.oasis.oslcop.sysml.IRedefinition;
import org.oasis.oslcop.sysml.IReferenceUsage;
import org.oasis.oslcop.sysml.IRelationship;
import org.oasis.oslcop.sysml.IRenderingUsage;
import org.oasis.oslcop.sysml.IRequirementUsage;
import org.oasis.oslcop.sysml.ISpecialization;
import org.oasis.oslcop.sysml.IStateUsage;
import org.oasis.oslcop.sysml.ISubsetting;
import org.oasis.oslcop.sysml.ITextualRepresentation;
import org.oasis.oslcop.sysml.ITransitionUsage;
import org.oasis.oslcop.sysml.IType;
import org.oasis.oslcop.sysml.ITypeFeaturing;
import org.oasis.oslcop.sysml.IUsage;
import org.oasis.oslcop.sysml.IUseCaseUsage;
import org.oasis.oslcop.sysml.IVariantMembership;
import org.oasis.oslcop.sysml.IVerificationCaseUsage;
import org.oasis.oslcop.sysml.IViewUsage;
import org.oasis.oslcop.sysml.IViewpointUsage;
// Start of user code imports
// End of user code

@OslcNamespace(SysmlDomainConstants.USAGE_NAMESPACE)
@OslcName(SysmlDomainConstants.USAGE_LOCALNAME)
@OslcResourceShape(title = "Usage Shape", describes = SysmlDomainConstants.USAGE_TYPE)
public interface IUsage
{

    public void addNestedUsage(final Link nestedUsage );
    public void addNestedPort(final Link nestedPort );
    public void addNestedAction(final Link nestedAction );
    public void addNestedState(final Link nestedState );
    public void addNestedConstraint(final Link nestedConstraint );
    public void addNestedTransition(final Link nestedTransition );
    public void addNestedRequirement(final Link nestedRequirement );
    public void addNestedCalculation(final Link nestedCalculation );
    public void addDirectedUsage(final Link directedUsage );
    public void addNestedCase(final Link nestedCase );
    public void addNestedAnalysisCase(final Link nestedAnalysisCase );
    public void addVariantMembership(final Link variantMembership );
    public void addUsage(final Link usage );
    public void addVariant(final Link variant );
    public void addNestedReference(final Link nestedReference );
    public void addNestedConnection(final Link nestedConnection );
    public void addNestedItem(final Link nestedItem );
    public void addNestedPart(final Link nestedPart );
    public void addNestedInterface(final Link nestedInterface );
    public void addNestedAttribute(final Link nestedAttribute );
    public void addNestedView(final Link nestedView );
    public void addNestedViewpoint(final Link nestedViewpoint );
    public void addNestedRendering(final Link nestedRendering );
    public void addNestedVerificationCase(final Link nestedVerificationCase );
    public void addNestedEnumeration(final Link nestedEnumeration );
    public void addNestedAllocation(final Link nestedAllocation );
    public void addNestedConcern(final Link nestedConcern );
    public void addNestedOccurrence(final Link nestedOccurrence );
    public void addDefinition(final Link definition );
    public void addNestedUseCase(final Link nestedUseCase );
    public void addNestedFlow(final Link nestedFlow );

    @OslcName("isVariation")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "isVariation")
    @OslcOccurs(Occurs.ExactlyOne)
    @OslcValueType(ValueType.Boolean)
    @OslcReadOnly(false)
    public Boolean isIsVariation();

    @OslcName("isReference")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "isReference")
    @OslcOccurs(Occurs.ExactlyOne)
    @OslcValueType(ValueType.Boolean)
    @OslcReadOnly(false)
    public Boolean isIsReference();

    @OslcName("nestedUsage")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedUsage")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.USAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedUsage();

    @OslcName("owningUsage")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "owningUsage")
    @OslcOccurs(Occurs.ZeroOrOne)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.USAGE_TYPE})
    @OslcReadOnly(false)
    public Link getOwningUsage();

    @OslcName("nestedPort")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedPort")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.PORTUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedPort();

    @OslcName("nestedAction")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedAction")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.ACTIONUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedAction();

    @OslcName("nestedState")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedState")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.STATEUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedState();

    @OslcName("nestedConstraint")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedConstraint")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.CONSTRAINTUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedConstraint();

    @OslcName("nestedTransition")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedTransition")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.TRANSITIONUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedTransition();

    @OslcName("nestedRequirement")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedRequirement")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.REQUIREMENTUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedRequirement();

    @OslcName("nestedCalculation")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedCalculation")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.CALCULATIONUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedCalculation();

    @OslcName("directedUsage")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "directedUsage")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.USAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getDirectedUsage();

    @OslcName("nestedCase")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedCase")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.CASEUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedCase();

    @OslcName("nestedAnalysisCase")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedAnalysisCase")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.ANALYSISCASEUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedAnalysisCase();

    @OslcName("variantMembership")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "variantMembership")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.VARIANTMEMBERSHIP_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getVariantMembership();

    @OslcName("usage")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "usage")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.USAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getUsage();

    @OslcName("variant")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "variant")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.USAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getVariant();

    @OslcName("nestedReference")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedReference")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.REFERENCEUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedReference();

    @OslcName("nestedConnection")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedConnection")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.CONNECTORASUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedConnection();

    @OslcName("nestedItem")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedItem")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.ITEMUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedItem();

    @OslcName("nestedPart")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedPart")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.PARTUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedPart();

    @OslcName("nestedInterface")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedInterface")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.INTERFACEUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedInterface();

    @OslcName("nestedAttribute")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedAttribute")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.ATTRIBUTEUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedAttribute();

    @OslcName("nestedView")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedView")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.VIEWUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedView();

    @OslcName("nestedViewpoint")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedViewpoint")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.VIEWPOINTUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedViewpoint();

    @OslcName("nestedRendering")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedRendering")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.RENDERINGUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedRendering();

    @OslcName("nestedVerificationCase")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedVerificationCase")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.VERIFICATIONCASEUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedVerificationCase();

    @OslcName("nestedEnumeration")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedEnumeration")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.ENUMERATIONUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedEnumeration();

    @OslcName("nestedAllocation")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedAllocation")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.ALLOCATIONUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedAllocation();

    @OslcName("nestedConcern")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedConcern")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.CONCERNUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedConcern();

    @OslcName("nestedOccurrence")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedOccurrence")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.OCCURRENCEUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedOccurrence();

    @OslcName("definition")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "definition")
    @OslcOccurs(Occurs.OneOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.CLASSIFIER_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getDefinition();

    @OslcName("nestedUseCase")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedUseCase")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.USECASEUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedUseCase();

    @OslcName("nestedFlow")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "nestedFlow")
    @OslcOccurs(Occurs.ZeroOrMany)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.FLOWCONNECTIONUSAGE_TYPE})
    @OslcReadOnly(false)
    public Set<Link> getNestedFlow();

    @OslcName("owningDefinition")
    @OslcPropertyDefinition(SysmlDomainConstants.SYSML_NAMSPACE + "owningDefinition")
    @OslcOccurs(Occurs.ZeroOrOne)
    @OslcValueType(ValueType.Resource)
    @OslcRange({SysmlDomainConstants.DEFINITION_TYPE})
    @OslcReadOnly(false)
    public Link getOwningDefinition();


    public void setIsVariation(final Boolean isVariation );
    public void setIsReference(final Boolean isReference );
    public void setNestedUsage(final Set<Link> nestedUsage );
    public void setOwningUsage(final Link owningUsage );
    public void setNestedPort(final Set<Link> nestedPort );
    public void setNestedAction(final Set<Link> nestedAction );
    public void setNestedState(final Set<Link> nestedState );
    public void setNestedConstraint(final Set<Link> nestedConstraint );
    public void setNestedTransition(final Set<Link> nestedTransition );
    public void setNestedRequirement(final Set<Link> nestedRequirement );
    public void setNestedCalculation(final Set<Link> nestedCalculation );
    public void setDirectedUsage(final Set<Link> directedUsage );
    public void setNestedCase(final Set<Link> nestedCase );
    public void setNestedAnalysisCase(final Set<Link> nestedAnalysisCase );
    public void setVariantMembership(final Set<Link> variantMembership );
    public void setUsage(final Set<Link> usage );
    public void setVariant(final Set<Link> variant );
    public void setNestedReference(final Set<Link> nestedReference );
    public void setNestedConnection(final Set<Link> nestedConnection );
    public void setNestedItem(final Set<Link> nestedItem );
    public void setNestedPart(final Set<Link> nestedPart );
    public void setNestedInterface(final Set<Link> nestedInterface );
    public void setNestedAttribute(final Set<Link> nestedAttribute );
    public void setNestedView(final Set<Link> nestedView );
    public void setNestedViewpoint(final Set<Link> nestedViewpoint );
    public void setNestedRendering(final Set<Link> nestedRendering );
    public void setNestedVerificationCase(final Set<Link> nestedVerificationCase );
    public void setNestedEnumeration(final Set<Link> nestedEnumeration );
    public void setNestedAllocation(final Set<Link> nestedAllocation );
    public void setNestedConcern(final Set<Link> nestedConcern );
    public void setNestedOccurrence(final Set<Link> nestedOccurrence );
    public void setDefinition(final Set<Link> definition );
    public void setNestedUseCase(final Set<Link> nestedUseCase );
    public void setNestedFlow(final Set<Link> nestedFlow );
    public void setOwningDefinition(final Link owningDefinition );
}

